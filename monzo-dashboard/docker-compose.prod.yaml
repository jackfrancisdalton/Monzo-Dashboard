services:
  postgres:
    image: postgres:15
    restart: always
    env_file: .env.production
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - monzo_dashboard

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    env_file: .env.production
    depends_on:
      - postgres
    networks:
      - monzo_dashboard

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    env_file: .env.production
    environment:
      VITE_API_URL: ${VITE_API_URL}
      VITE_FRONTEND_URL: ${VITE_FRONTEND_URL}
    networks:
      - monzo_dashboard

  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    environment: # Provide URLs to template to reverse proxy to services over docker network
      API_DOCKER_URL: ${API_DOCKER_URL}
      FRONTEND_DOCKER_URL: ${FRONTEND_DOCKER_URL}
    ports:
      - "80:80" # Expose port 80  as the entrypoint for reverse proxy TODO: replace with env variable for flexibility
      # NOTE: consider offering over HTTP and exposing 443 for HTTPS with certs
    depends_on:
      - frontend
      - api
    networks:
      - monzo_dashboard

volumes:
  pg_data:

networks:
  monzo_dashboard: