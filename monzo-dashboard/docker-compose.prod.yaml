services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - monzo_dashboard

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      MONZO_CLIENT_ID: ${MONZO_CLIENT_ID}
      MONZO_CLIENT_SECRET: ${MONZO_CLIENT_SECRET}
      MONZO_REDIRECT_URI: ${MONZO_REDIRECT_URI}
      ENCRYPTION_ALGORITHM: ${ENCRYPTION_ALGORITHM}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      ENCRYPTION_IV: ${ENCRYPTION_IV}
      VITE_FRONTEND_URL: ${VITE_FRONTEND_URL}
    depends_on:
      - postgres
    networks:
      - monzo_dashboard

  frontend:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      VITE_API_URL: ${VITE_API_URL}
      VITE_FRONTEND_URL: ${VITE_FRONTEND_URL}
    networks:
      - monzo_dashboard

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./nginx/entrypoint.sh:/docker-entrypoint.d/10-envsubst.sh # Make entry point run in container before container starts
    environment: # Provide URLs to template to reverse proxy to services over docker network
      API_DOCKER_URL: ${API_DOCKER_URL}
      FRONTEND_DOCKER_URL: ${FRONTEND_DOCKER_URL}
    ports:
      - "80:80"
    depends_on:
      - frontend
      - api
    networks:
      - monzo_dashboard

volumes:
  pg_data:

networks:
  monzo_dashboard: