# --- Base Image with Turbo, pnpm and common tools ---
FROM node:22-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

RUN apk add --no-cache libc6-compat
RUN corepack enable
RUN pnpm add -g turbo

# --- Builder: prune monorepo and prepare isolated frontend app ---
FROM base AS builder
WORKDIR /prunedRepo

COPY . . 
RUN turbo prune --scope=frontend --docker

# --- Installer: install dependencies for isolated frontend app ---
FROM base AS installer
WORKDIR /app

COPY --from=builder /prunedRepo/out/json/ ./
COPY --from=builder /prunedRepo/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /prunedRepo/pnpm-workspace.yaml ./pnpm-workspace.yaml

RUN pnpm install --frozen-lockfile

ARG VITE_API_URL
ARG VITE_FRONTEND_URL
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_FRONTEND_URL=$VITE_FRONTEND_URL

COPY --from=builder /prunedRepo/out/full/ ./
RUN pnpm turbo run build --filter=frontend...

# --- Final Nginx stage ---
FROM nginx:alpine
COPY --from=installer /app/apps/frontend/dist /usr/share/nginx/html

# Required to ensure SPA behaviour is routed correctly, always reutrning index file
COPY apps/frontend/frontend.nginx.template.conf /etc/nginx/templates/default.conf.template


