# Reverse proxy port the application is served over
NGINX_PORT=80

# Ports assigned for apps inside of respective docker containers (not exposed to host), used to communicate over docker network
API_PORT=3000
FRONTEND_PORT=80
MOCK_MONZO_PORT=3001


# Docker Network URLs for inter-service communication 
# (NOTE if docker-compose service names are updated these will need to be updated too)
FRONTEND_DOCKER_URL=frontend:${FRONTEND_PORT}
API_DOCKER_URL=api:${API_PORT}
MOCK_MONZO_DOCKER_URL=mockmonzo:${MOCK_MONZO_PORT}


# Monzo Oauth flow configuration (client and secret aquired from Monzo Dev Portal)
MONZO_CLIENT_ID=<your client id>
MONZO_CLIENT_SECRET=<your client secret>
MONZO_REDIRECT_URI=http://localhost:${NGINX_PORT}/api/auth/monzo/callback


# PostgreSQL database configuration (where monzo data is stored)
DB_HOST=postgres
DB_PORT=5432
DB_USER=dashboard
DB_PASSWORD=secret
DB_NAME=monzo_db


# Encryption configuration for Oauth refresh/access tokens
ENCRYPTION_ALGORITHM=aes-256-cbc
ENCRYPTION_KEY=<generate your own encryption key as 64 char hex>
ENCRYPTION_IV=<generate your own encryption iv as 32 char hex>


# Provided to frontend to inform it of its own URL for callbacks, and API url for HTTP requests
VITE_FRONTEND_URL=http://localhost:${NGINX_PORT}
VITE_API_URL=http://localhost:${NGINX_PORT}/api


# If true communicate with real monzo API, if false use mock monzo service
USE_REAL_MONZO_API=true


# IF USE_REAL_MONZO_API is false, provides this URL to API for HTTP calls the mock monzo service
MOCK_MONZO_URL=http://${MOCK_MONZO_DOCKER_URL}


NODE_ENV=production